<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">CircuitTraining</string>

    <integer name="num_images">32</integer>
    <integer name="num_columns">8</integer>
    <string name="wire_mode_label">*Wire*\nMode</string>
    <string name="splash_screen_title"> Circuit\nTraining</string>
    <string name="splash_screen_hint_text">Click to Begin</string>
    <string name="and_gate">
        The AND gate is so named because it acts in the same way as the logical "and" operator. The output is "true" when both inputs are "true." Otherwise, the output is "false."
    </string>
    <string name="nand_gate">
        The NAND gate operates as an AND gate followed by a NOT gate. It acts in the manner of the logical operation "and" followed by negation. The output is "false" if both inputs are "true." Otherwise, the output is "true."
    </string>
    <string name="nor_gate">
        The NOR gate is a combination OR gate followed by a NOT gate. Its output is "true" if both inputs are "false." Otherwise, the output is "false."
    </string>
    <string name="not_gate">
        A NOT gate requires a single connection. It will only output if this connection is switched off, and will not output if the connection is switched on.
    </string>
    <string name="or_gate">
        The OR gate gets its name from the fact that it behaves after the fashion of the logical inclusive "or." The output is "true" if either or both of the inputs are "true." If both inputs are "false," then the output is "false."
    </string>
    <string name="xnor_gate">
        The XNOR (exclusive-NOR) gate is a combination XOR gate followed by a NOT gate. Its output is "true" if the inputs are the same, and "false" if the inputs are different.    </string>
    <string name="xor_gate">
        The XOR ( exclusive-OR ) gate acts in the same way as the logical "either/or." The output is "true" if either, but not both, of the inputs are "true."
    </string>

</resources>
